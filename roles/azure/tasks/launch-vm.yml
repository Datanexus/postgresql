# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# Launch an Azure AMI
# 
---
- name: POSTGRESQL OVERLAY | creating ssh security group
  azure_rm_securitygroup:
    resource_group: "{{ specified_resourcegroup.name }}"
    name: "dnsg_{{ project }}_ssh_private_internal"
    purge_rules: yes
    rules:
      - name: DenyAll
        proto: '*'
        source_address_prefix: '*'
        source_port_range: '*'
        destination_address_prefix: "{{ internal_private_subnet_result.properties.addressPrefix }}"
        destination_port_range: '*'
        access: Deny
        priority: 200
        direction: Inbound
      - name: AllowSSH
        proto: TCP
        destination_port_range: 22
        access: Allow
        priority: 100
        direction: Inbound
        source_address_prefix: "{{ internal_private_subnet_result.properties.addressPrefix }}"
  register: sg_ssh_private

- name: POSTGRESQL OVERLAY | creating postgresql security group
  azure_rm_securitygroup:
    resource_group: "{{ specified_resourcegroup.name }}"
    name: "dnsg_{{ project }}_{{ application }}_public_internal"
    purge_rules: yes
    rules:
      - name: DenyAll
        proto: '*'
        source_address_prefix: '*'
        source_port_range: '*'
        destination_address_prefix: "{{ internal_public_subnet_result.properties.addressPrefix }}"
        destination_port_range: '*'
        access: Deny
        priority: 200
        direction: Inbound
      - name: AllowPG
        proto: TCP
        source_address_prefix: "{{ internal_public_subnet_result.properties.addressPrefix }}"
        source_port_range: '*'
        destination_address_prefix: "{{ internal_public_subnet_result.properties.addressPrefix }}"
        destination_port_range: 5432
        access: Allow
        priority: 101
        direction: Inbound
  register: sg_postgresql

- name: POSTGRESQL OVERLAY | setting key path to {{ key_path }}
  set_fact: key_path="{{ ansible_env.PWD }}"
  when: key_path is not defined

- name: POSTGRESQL OVERLAY | checking {{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem
  stat: path="{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem"
  register: existing_key

# create new SSH key - azure supports 2048bit+ RSA 
- block:    
  - name: POSTGRESQL OVERLAY | creating {{ cloud }}-{{ region }}-{{ project }}-{{ application }}
    command: "/usr/bin/ssh-keygen -b 2048 -t rsa -f {{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem -N ''"
    register: new_azure_keypair

  - name: setting read-only permissions on key {{ cloud }}-{{ region }}-{{ project }}-{{ application }}
    file:
      path: "{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem.pub"
      mode: 0400
    when:
      - new_azure_keypair.changed
  when:
    - not existing_key.stat.exists
  
- block:
  - name: POSTGRESQL OVERLAY | creating {{ application }} virtual {{ project }}_{{ application }}_internal NIC
    azure_rm_networkinterface:
      resource_group: "{{ specified_resourcegroup.name }}"
      name: "{{ project }}_{{ application }}_internal"    
      virtual_network: "{{ virtualnetwork_by_name.ansible_facts.azure_virtualnetworks.0.name }}"
      subnet_name: "{{ internal_private_subnet_result.name }}"
      security_group: "dnsg_{{ project }}_ssh_private_internal"
      ip_configurations:
        - name: ipconfig1
          primary: yes
      tags:
        Application: "{{ application }}"  
        Role: "{{ role | default ('none') }}"
        Tenant: "{{ tenant }}"
        Project: "{{ project }}"
        Cloud: "{{ cloud }}"
        Domain: "{{ domain }}"
        Cluster: "{{ cluster | default ('a') }}"
        Dataflow: "{{ dataflow | default ('none') }}"

  - name: POSTGRESQL OVERLAY | creating {{ application }} virtual {{ project }}_{{ application }}_external NIC
    azure_rm_networkinterface:
      resource_group: "{{ specified_resourcegroup.name }}"
      name: "{{ project }}_{{ application }}_external"
      virtual_network: "{{ virtualnetwork_by_name.ansible_facts.azure_virtualnetworks.0.name }}"
      subnet_name: '{{ internal_public_subnet_result.name }}'
      security_group: "dnsg_{{ project }}_{{ application }}_public_internal"
      ip_configurations:
        - name: ipconfig1
          primary: yes
      tags:
        Application: "{{ application }}"  
        Role: "{{ role | default ('none') }}"
        Tenant: "{{ tenant }}"
        Project: "{{ project }}"
        Cloud: "{{ cloud }}"
        Domain: "{{ domain }}"
        Cluster: "{{ cluster | default ('a') }}"
        Dataflow: "{{ dataflow | default ('none') }}"
  
  # this is not necessarily idempotent because we're shelling out
  - name: POSTGRESQL OVERLAY | creating {{ application }} VM in {{ specified_resourcegroup.name }}
    command: "az vm create --resource-group {{ specified_resourcegroup.name }} --name {{ project }}-{{ application }} --location {{ region }} --nics {{ project }}_{{ application }}_internal {{ project }}_{{ application }}_external --size {{ image | default('Standard_D8_v3') }} --os-disk-size-gb {{ root_volume }} --image Centos --admin-username {{ user }} --authentication-type ssh --ssh-key-value {{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem.pub --tags Name={{ project }}_{{ application }} Tenant={{ tenant }} Project={{ project }} Cloud={{ cloud }} Domain={{ domain }} Application={{ application }} Cluster={{ cluster | default ('a') }} Role={{ role | default ('none') }} Dataflow={{ dataflow | default ('none') }}"

  - name: POSTGRESQL OVERLAY | creating {{ application }} data disk in {{ specified_resourcegroup.name }}
    azure_rm_managed_disk:
      name: "{{ project }}-{{ application }}-data"
      resource_group: "{{ specified_resourcegroup.name }}"
      disk_size_gb: "{{ data_volume }}"
      managed_by: "{{ project }}-{{ application }}"
        
  - name: Get facts for all Public IPs within a resource groups
    azure_rm_publicipaddress_facts:
      resource_group: "{{ specified_resourcegroup.name }}"
      name: "{{ project }}_{{ application }}_internal_ip"
    register: all_ips

  - debug: msg="{{ item.properties.ipAddress }}" 
    with_items: "{{ all_ips.ansible_facts.azure_publicipaddresses }}"

  when: not replica
  
- block:
  - name: POSTGRESQL OVERLAY | creating {{ application }} master virtual {{ project }}_{{ application }}_internal NIC
    azure_rm_networkinterface:
      resource_group: "{{ specified_resourcegroup.name }}"
      name: "{{ project }}_{{ application }}_master_internal"    
      virtual_network: "{{ virtualnetwork_by_name.ansible_facts.azure_virtualnetworks.0.name }}"
      subnet_name: "{{ internal_private_subnet_result.name }}"
      security_group: "dnsg_{{ project }}_ssh_private_internal"
      ip_configurations:
        - name: ipconfig1
          primary: yes
      tags:
        Application: "{{ application }}"
        Role: master
        Tenant: "{{ tenant }}"
        Project: "{{ project }}"
        Cloud: "{{ cloud }}"
        Domain: "{{ domain }}"
        Cluster: "{{ cluster | default ('a') }}"
        Dataflow: "{{ dataflow | default ('none') }}"
        
  - name: POSTGRESQL OVERLAY | creating {{ application }} master virtual {{ project }}_{{ application }}_external NIC
    azure_rm_networkinterface:
      resource_group: "{{ specified_resourcegroup.name }}"
      name: "{{ project }}_{{ application }}_master_external"
      virtual_network: "{{ virtualnetwork_by_name.ansible_facts.azure_virtualnetworks.0.name }}"
      subnet_name: '{{ internal_public_subnet_result.name }}'
      security_group: "dnsg_{{ project }}_{{ application }}_public_internal"
      ip_configurations:
        - name: ipconfig1
          primary: yes
      tags:
        Application: "{{ application }}"
        Role: master
        Tenant: "{{ tenant }}"
        Project: "{{ project }}"
        Cloud: "{{ cloud }}"
        Domain: "{{ domain }}"
        Cluster: "{{ cluster | default ('a') }}"
        Dataflow: "{{ dataflow | default ('none') }}"
        
  - name: POSTGRESQL OVERLAY | creating {{ application }} replica1 virtual {{ project }}_{{ application }}_internal NIC
    azure_rm_networkinterface:
      resource_group: "{{ specified_resourcegroup.name }}"
      name: "{{ project }}_{{ application }}_replica1_internal"    
      virtual_network: "{{ virtualnetwork_by_name.ansible_facts.azure_virtualnetworks.0.name }}"
      subnet_name: "{{ internal_private_subnet_result.name }}"
      security_group: "dnsg_{{ project }}_ssh_private_internal"
      ip_configurations:
        - name: ipconfig1
          primary: yes
      tags:
        Application: "{{ application }}"
        Role: replica
        Tenant: "{{ tenant }}"
        Project: "{{ project }}"
        Cloud: "{{ cloud }}"
        Domain: "{{ domain }}"
        Cluster: "{{ cluster | default ('a') }}"
        Dataflow: "{{ dataflow | default ('none') }}"
        
  - name: POSTGRESQL OVERLAY | creating {{ application }} replica1 virtual {{ project }}_{{ application }}_external NIC
    azure_rm_networkinterface:
      resource_group: "{{ specified_resourcegroup.name }}"
      name: "{{ project }}_{{ application }}_replica1_external"
      virtual_network: "{{ virtualnetwork_by_name.ansible_facts.azure_virtualnetworks.0.name }}"
      subnet_name: '{{ internal_public_subnet_result.name }}'
      security_group: "dnsg_{{ project }}_{{ application }}_public_internal"
      ip_configurations:
        - name: ipconfig1
          primary: yes
      tags:
        Application: "{{ application }}"
        Role: replica
        Tenant: "{{ tenant }}"
        Project: "{{ project }}"
        Cloud: "{{ cloud }}"
        Domain: "{{ domain }}"
        Cluster: "{{ cluster | default ('a') }}"
        Dataflow: "{{ dataflow | default ('none') }}"

  # this is not necessarily idempotent because we're shelling out
  - name: POSTGRESQL OVERLAY | creating {{ application }} master VM in {{ specified_resourcegroup.name }}
    command: "az vm create --resource-group {{ specified_resourcegroup.name }} --name {{ project }}-{{ application }}-master --location {{ region }} --nics {{ project }}_{{ application }}_master_internal {{ project }}_{{ application }}_master_external --size {{ master_image }} --os-disk-size-gb {{ root_volume }} --image Centos --admin-username {{ user }} --authentication-type ssh --ssh-key-value {{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem.pub --tags Name={{ project }}_{{ application }} Tenant={{ tenant }} Project={{ project }} Cloud={{ cloud }} Domain={{ domain }} Application={{ application }} Cluster={{ cluster | default ('a') }} Role={{ role | default ('master') }} Dataflow={{ dataflow | default ('none') }}"
  
  - name: POSTGRESQL OVERLAY | creating {{ application }} master data disk in {{ specified_resourcegroup.name }}
    azure_rm_managed_disk:
      name: "{{ project }}-{{ application }}-master-data"
      resource_group: "{{ specified_resourcegroup.name }}"
      disk_size_gb: "{{ data_volume }}"
      managed_by: "{{ project }}-{{ application }}-master"
      
  # this is not necessarily idempotent because we're shelling out
  - name: POSTGRESQL OVERLAY | creating {{ application }} replica1 VM in {{ specified_resourcegroup.name }}
    command: "az vm create --resource-group {{ specified_resourcegroup.name }} --name {{ project }}-{{ application }}-replica1 --location {{ region }} --nics {{ project }}_{{ application }}_replica1_internal {{ project }}_{{ application }}_replica1_external --size {{ replica_image }} --os-disk-size-gb {{ root_volume }} --image Centos --admin-username {{ user }} --authentication-type ssh --ssh-key-value {{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem.pub --tags Name={{ project }}_{{ application }} Tenant={{ tenant }} Project={{ project }} Cloud={{ cloud }} Domain={{ domain }} Application={{ application }} Cluster={{ cluster | default ('a') }} Role={{ role | default ('replica') }} Dataflow={{ dataflow | default ('none') }}"
  
  - name: POSTGRESQL OVERLAY | creating {{ application }} replica1 data disk in {{ specified_resourcegroup.name }}
    azure_rm_managed_disk:
      name: "{{ project }}-{{ application }}-replica1-data"
      resource_group: "{{ specified_resourcegroup.name }}"
      disk_size_gb: "{{ data_volume }}"
      managed_by: "{{ project }}-{{ application }}-replica1"
        
  when: replica


# multiple NICS fails using ansible
# - name: POSTGRESQL OVERLAY | creating {{ application }} VM in {{ specified_resourcegroup.name }}
#   azure_rm_virtualmachine:
#     resource_group: "{{ specified_resourcegroup.name }}"
#     name: "{{ project }}-{{ application }}"
#     # storage_account: '{{ vmname }}'
#    #  storage_container: '{{ vmname }}'
#    #  storage_blob: '{{ vmname }}.vhd'
#     network_interface_names: [  "{{ project }}_{{ application }}_internal", "{{ project }}_{{ application }}_external" ]
#     vm_size: "{{ image }}"
#     admin_username: "{{ user }}"
#     ssh_password_enabled: False
#     ssh_public_keys:
#       - path: "/home/{{ user }}/.ssh/authorized_keys"
#         key_data: "{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem.pub"
#     image:
#       offer: CentOS
#       publisher: OpenLogic
#       sku: '7.4'
#       version: latest
