# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# discover Azure inventory
---
- name: POSTGRESQL OVERLAY | setting key_path
  set_fact: key_path="{{ ansible_env.PWD }}"
  when: key_path is not defined

- name: POSTGRESQL OVERLAY | discovering standalone {{ application }}
  azure_rm_networkinterface_facts:
    resource_group: "{{ specified_resourcegroup.name }}"
    name: "{{ project }}_{{ application }}_{{ ec2_tag_Role | default('none') }}_{{ cluster | default('a') }}_{{ dataflow | default('none') }}_{{ item }}_internal"    
    tags:
      - Application:{{ application }}
      - Role:{{ ec2_tag_Role | default('none') }}
      - Tenant:{{ tenant }}
      - Project:{{ project }}
      - Cloud:{{ cloud }}
      - Domain:{{ domain }}
      - Cluster:{{ cluster | default('a') }}
      - Dataflow:{{ dataflow | default('none') }}
  with_sequence: count={{ count }}
  register: all_postgresql

# the when: clause is to handle the possibility of empty roles sets, such as when there is no master or replica
- name: POSTGRESQL OVERLAY | adding all postgres nodes to {{ application }} host group
  add_host: hostname="{{ item.ansible_facts.azure_networkinterfaces.0.properties.ipConfigurations.0.properties.privateIPAddress }}" groupname=postgresql ansible_user="{{ user }}" ansible_ssh_private_key_file="{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem"
  when: item.ansible_facts.azure_networkinterfaces | length > 0
  with_items: "{{ all_postgresql.results }}"
  
- name: POSTGRESQL OVERLAY | discovering {{ application }} master
  azure_rm_networkinterface_facts:
    resource_group: "{{ specified_resourcegroup.name }}"
    name: "{{ project }}_{{ application }}_{{ ec2_tag_Role | default('master') }}_{{ cluster | default('a') }}_{{ dataflow | default('none') }}_{{ item }}_master_internal"
    tags:
      - Application:{{ application }}
      - Role:{{ ec2_tag_Role | default('master') }}
      - Tenant:{{ tenant }}
      - Project:{{ project }}
      - Cloud:{{ cloud }}
      - Domain:{{ domain }}
      - Cluster:{{ cluster | default('a') }}
      - Dataflow:{{ dataflow | default('none') }}
  with_sequence: count={{ count }}
  register: master_postgresql

- name: POSTGRESQL OVERLAY | adding all postgres masters to {{ application }} host group
  add_host: hostname="{{ item.ansible_facts.azure_networkinterfaces.0.properties.ipConfigurations.0.properties.privateIPAddress }}" groupname=postgresql ansible_user="{{ user }}" ansible_ssh_private_key_file="{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem"
  when: item.ansible_facts.azure_networkinterfaces | length > 0
  with_items: "{{ master_postgresql.results }}"
  
- name: POSTGRESQL OVERLAY | adding all postgres masters to {{ application }} master host group
  add_host: hostname="{{ item.ansible_facts.azure_networkinterfaces.0.properties.ipConfigurations.0.properties.privateIPAddress }}" groupname=postgresql_master ansible_user="{{ user }}" ansible_ssh_private_key_file="{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem"
  when: item.ansible_facts.azure_networkinterfaces | length > 0
  with_items: "{{ master_postgresql.results }}"

- name: POSTGRESQL OVERLAY | discovering {{ application }} replica
  azure_rm_networkinterface_facts:
    resource_group: "{{ specified_resourcegroup.name }}"
    name: "{{ project }}_{{ application }}_{{ ec2_tag_Role | default('replica') }}_{{ cluster | default('a') }}_{{ dataflow | default('none') }}_{{ item }}_replica_internal"
    tags:
      - Application:{{ application }}
      - Role:{{ ec2_tag_Role | default('replica') }}
      - Tenant:{{ tenant }}
      - Project:{{ project }}
      - Cloud:{{ cloud }}
      - Domain:{{ domain }}
      - Cluster:{{ cluster | default('a') }}
      - Dataflow:{{ dataflow | default('none') }}
  with_sequence: count={{ count }}
  register: replica_postgresql

- name: POSTGRESQL OVERLAY | building postgresql host group
  add_host: hostname="{{ item.ansible_facts.azure_networkinterfaces.0.properties.ipConfigurations.0.properties.privateIPAddress }}" groupname=postgresql ansible_user="{{ user }}" ansible_ssh_private_key_file="{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem"
  when: item.ansible_facts.azure_networkinterfaces | length > 0
  with_items: "{{ replica_postgresql.results }}"

- name: POSTGRESQL OVERLAY | building postgresql replica host group
  add_host: hostname="{{ item.ansible_facts.azure_networkinterfaces.0.properties.ipConfigurations.0.properties.privateIPAddress }}" groupname=postgresql_replica ansible_user="{{ user }}" ansible_ssh_private_key_file="{{ key_path }}/{{ cloud }}-{{ region }}-{{ project }}-{{ application }}-{{ domain }}-private-key.pem"
  when: item.ansible_facts.azure_networkinterfaces | length > 0
  with_items: "{{ replica_postgresql.results }}"
