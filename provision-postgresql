#!/usr/bin/env ansible-playbook
# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# main routine for provisioning postgresql
---
- name: POSTGRESQL OVERLAY | discovering {{ cloud }} networking
  tags:
    - postgresql
    - vm
  hosts: localhost
  vars_files:
    - vars/postgresql.yml
  gather_facts: no
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
      
    - include_role:
        name: aws
        tasks_from: discover-vpc
      when: cloud == 'aws'
    
    - include_role:
        name: azure
        tasks_from: discover-resourcegroup
      when: cloud == 'azure'

- name: POSTGRESQL OVERLAY | creating {{ cloud }} security groups
  tags:
    - postgresql
    - vm
  hosts: localhost
  gather_facts: no
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
      
    - include_role:
        name: aws
        tasks_from: create-securitygroup
      when: cloud == 'aws'

- name: POSTGRESQL OVERLAY | launching VM
  tags: vm
  vars_files:
    - vars/postgresql.yml
  hosts: localhost
  connection: local
  gather_facts: yes
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
      
    - include_role:
        name: aws
        tasks_from: launch-vm
      when: cloud == 'aws'
    - include_role:
        name: osp
        tasks_from: launch-vm
      when: cloud == 'osp'
    - include_role:
        name: azure
        tasks_from: launch-vm
      when: cloud == 'azure'

- name: POSTGRESQL OVERLAY | applying {{ cloud }} security groups
  tags:
    - postgresql
  hosts: localhost
  vars_files:
    - vars/postgresql.yml
  gather_facts: no
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
      
    - include_role:
        name: aws
        tasks_from: apply-securitygroup
      when: cloud == 'aws'
    
    # azure security groups are applied on instance boot
      
- name: POSTGRESQL OVERLAY | gathering {{ cloud }} inventory
  tags:
    - postgresql
    - vm
  hosts: localhost
  vars_files:
    - vars/postgresql.yml
  gather_facts: no
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
      
    - include_role:
        name: aws
        tasks_from: discover-vm
      when: cloud == 'aws'
      
    - include_role:
        name: azure
        tasks_from: discover-vm
      when: cloud == 'azure'
    
# this is a separate step because ansible needs to gather facts on a fully configured base system
- name: POSTGRESQL OVERLAY | completing OS configuration
  hosts: postgresql
  tags: vm
  vars_files:
    - vars/postgresql.yml
  gather_facts: yes
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
    
    - include_role:
        name: preflight
      vars:
        mountpoint: "/data"
    
    - include_role:
        name: http-proxy
      when: http_proxy is defined
    
- name: POSTGRESQL OVERLAY | installing base postgresql application
  tags:
    - vm
    - postgresql
  hosts: postgresql
  vars_files:
    - vars/postgresql.yml
  gather_facts: yes
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
    
    - include_role:
        name: postgresql
 
- name: POSTGRESQL OVERLAY MASTER | configuring master
  tags: 
    - vm
    - postgresql
  hosts: postgresql_master
  gather_facts: no
  vars_files:
    - vars/postgresql.yml
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
    
    - include_role:
        name: master-streaming
      when:
        - groups['postgresql_replica'] is defined
        - groups['postgresql_replica'] | length > 0
        
- name: POSTGRESQL OVERLAY REPLICA | configuring replica
  tags:
    - vm
    - postgresql
  hosts: postgresql_replica
  gather_facts: no
  vars_files:
    - vars/postgresql.yml
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
    
    - include_role:
        name: replica-streaming
      when:
        - groups['postgresql_master'] is defined
        - groups['postgresql_master'] | length > 0        
           
- name: POSTGRESQL OVERLAY MASTER | staging data
  tags: 
    - vm
    - postgresql
  hosts: postgresql_master
  gather_facts: no
  vars_files:
    - vars/postgresql.yml
  tasks:
    - include_vars: "{{ configuration }}"
      when: configuration is defined
      
    - block:
      
      - name: POSTGRESQL OVERLAY MASTER | checking if {{ datafile }} exists
        stat:
          path: "{{ datafile }}"
        register: sqlscript
      
      - name: POSTGRESQL OVERLAY MASTER | uploading {{ datafile }}
        copy:
          src: "{{ datafile }}"
          dest: "/home/{{ user }}/{{ datafile }}"
          owner: "{{ user }}"
          group: "{{ user }}"
          mode: 0600
        when: sqlscript.stat.exists
        
      - name: POSTGRESQL OVERLAY MASTER | executing {{ datafile }}
        command: /usr/bin/psql -f /home/{{ user }}/{{ datafile }}
        when: sqlscript.stat.exists

      when:
        - datafile is defined
