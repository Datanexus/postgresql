#!/usr/bin/env ansible-playbook
# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# simple test file for standalone or master/replica
---
- name: gathering {{ cloud }} inventory
  hosts: localhost
  vars_files:
    - "{{ configuration }}"
    - vars/postgresql.yml
  gather_facts: yes
  tasks:
    - include_role:
        name: aws
        tasks_from: discover-vm
      when: cloud == 'aws'

# run the create and select on the standalone               
- hosts: "{{ application }}"
  vars_files:
    - "{{ configuration }}"
    - vars/postgresql.yml
  tasks:
    - command: "/usr/bin/psql -c 'create table if not exists t_random as select s, md5(random()::text) from generate_Series(1,500) s;'"
      become: yes
      become_user: postgres
      register: create_out
      when: groups['postgresql_master'] is not defined
        
    - debug: msg="{{ create_out.stdout_lines }}"
      when: groups['postgresql_master'] is not defined

    - command: "/usr/bin/psql -c 'select * from t_random limit 15;'"
      become: yes
      become_user: postgres
      register: select_out
      when: groups['postgresql_master'] is not defined
        
    - debug: msg="{{ select_out.stdout_lines }}"
      when: groups['postgresql_master'] is not defined

# run the create and select on the master/replica pair                 
- hosts: "{{ application }}_master"
  vars_files:
    - "{{ configuration }}"
    - vars/postgresql.yml
  tasks:
    - command: "/usr/bin/psql -c 'create table if not exists t_random as select s, md5(random()::text) from generate_Series(1,500) s;'"
      become: yes
      become_user: postgres
      register: create_out
      
    - debug: msg="{{ create_out.stdout_lines }}"
        
- hosts: "{{ application }}_replica"
  vars_files:
    - "{{ configuration }}"
    - vars/postgresql.yml
  tasks:
    - command: "/usr/bin/psql -c 'select * from t_random limit 15;'"
      become: yes
      become_user: postgres
      register: select_out
    
    - debug: msg="{{ select_out.stdout_lines }}"

# clean up the t_random table        
- hosts: "{{ application }}"
  vars_files:
    - "{{ configuration }}"
    - vars/postgresql.yml
  tasks:
    - command: "/usr/bin/psql -c 'drop table t_random;'"
      become: yes
      become_user: postgres
      register: drop_out
      when: groups['postgresql_master'] is not defined
      
    - debug: msg="{{ drop_out.stdout_lines }}"
      when: groups['postgresql_master'] is not defined
        
- hosts: "{{ application }}_master"
  vars_files:
    - "{{ configuration }}"
    - vars/postgresql.yml
  tasks:
    - command: "/usr/bin/psql -c 'drop table t_random;'"
      become: yes
      become_user: postgres
      register: drop_out
      
    - debug: msg="{{ drop_out.stdout_lines }}"        